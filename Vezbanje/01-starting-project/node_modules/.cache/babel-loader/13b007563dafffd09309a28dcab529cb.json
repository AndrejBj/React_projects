{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Master\\\\Desktop\\\\IT\\\\React\\\\Vezbanje\\\\01-starting-project\\\\src\\\\Components\\\\UI\\\\Card.js\";\nimport React from \"react\";\nimport classes from \"./Card.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes.card} ${props.className}`,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this); //className={classes.card} pristupamo preko css modules klase u Card.module.css, u ovom slucaju imamo tamo samo .card pa uzimamo nju\n}; //{props.children} je poseban ugradjeni props koji se odnosi na ceo custom made wrapper koji smo napravili tj na sve unutar <Card ... /> tako da taj Card nasledi sve sto se nalazi unutar njega i to prikaze na stranici (s obzirom da je on roditelj sad)\n//{props.className} daje do znanja React-u da koristi AddUser.module.css koji smo uvezali u AddUser.js, tako sto prepozna sta je ustvari className (mozemo staviti bilo sta npr props.nesto, ako smo i u AddUser.js stavili <Card nesto={classes.input})\n\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","classes","Card","props","card","className","children"],"sources":["C:/Users/Master/Desktop/IT/React/Vezbanje/01-starting-project/src/Components/UI/Card.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {                \r\n    return <div className={`${classes.card} ${props.className}`}>{props.children}</div>;      //className={classes.card} pristupamo preko css modules klase u Card.module.css, u ovom slucaju imamo tamo samo .card pa uzimamo nju\r\n};                                                                                            //{props.children} je poseban ugradjeni props koji se odnosi na ceo custom made wrapper koji smo napravili tj na sve unutar <Card ... /> tako da taj Card nasledi sve sto se nalazi unutar njega i to prikaze na stranici (s obzirom da je on roditelj sad)\r\n                                                                                              //{props.className} daje do znanja React-u da koristi AddUser.module.css koji smo uvezali u AddUser.js, tako sto prepozna sta je ustvari className (mozemo staviti bilo sta npr props.nesto, ako smo i u AddUser.js stavili <Card nesto={classes.input})\r\n\r\nexport default Card;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EACpB,oBAAO;IAAK,SAAS,EAAG,GAAEF,OAAO,CAACG,IAAK,IAAGD,KAAK,CAACE,SAAU,EAAnD;IAAA,UAAuDF,KAAK,CAACG;EAA7D;IAAA;IAAA;IAAA;EAAA,QAAP,CADoB,CACsE;AAC7F,CAFD,C,CAE8F;AACA;;;KAHxFJ,I;AAKN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}