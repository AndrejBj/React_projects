{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Master\\\\Desktop\\\\IT\\\\React\\\\Vezbanje\\\\01-starting-project\\\\src\\\\Components\\\\Users\\\\UsersList.js\";\nimport React from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from \"./UsersList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsersList = props => {\n  //sa map() pretvaramo niz users (povucenih iz App.js) u niz JSX elemenata koji su nakon toga renderovani na DOM; stavili smo da nam izbacuje podatke tako da izbaci niz user objekata gde svaki objekat ima atribut za ime i atribut za godine\n  return (\n    /*#__PURE__*/\n    //<Card className={classes.users}> pored Card stilizacije unosimo i classes.users stilizaciju iz UsersList.module.css\n    _jsxDEV(Card, {\n      className: classes.users,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: props.users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [user.name, \" (\", user.age, \" years old)\"]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_c = UsersList;\nexport default UsersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["React","Card","classes","UsersList","props","users","map","user","name","age","id"],"sources":["C:/Users/Master/Desktop/IT/React/Vezbanje/01-starting-project/src/Components/Users/UsersList.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport classes from \"./UsersList.module.css\";\r\n\r\nconst UsersList = (props) => {           //sa map() pretvaramo niz users (povucenih iz App.js) u niz JSX elemenata koji su nakon toga renderovani na DOM; stavili smo da nam izbacuje podatke tako da izbaci niz user objekata gde svaki objekat ima atribut za ime i atribut za godine\r\n    return (                             //<Card className={classes.users}> pored Card stilizacije unosimo i classes.users stilizaciju iz UsersList.module.css\r\n    <Card className={classes.users}>\r\n        <ul>         \r\n            {props.users.map(user => (\r\n            <li key={user.id}>\r\n                {user.name} ({user.age} years old)\r\n            </li>\r\n            ))}             \r\n        </ul>\r\n    </Card>\r\n    );\r\n}; \r\n\r\nexport default UsersList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAY;EACrC;IAAA;IAAqC;IACrC,QAAC,IAAD;MAAM,SAAS,EAAEF,OAAO,CAACG,KAAzB;MAAA,uBACI;QAAA,UACKD,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,iBACrB;UAAA,WACKA,IAAI,CAACC,IADV,QACkBD,IAAI,CAACE,GADvB;QAAA,GAASF,IAAI,CAACG,EAAd;UAAA;UAAA;UAAA;QAAA,QADC;MADL;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADA;AAWH,CAZD;;KAAMP,S;AAcN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}