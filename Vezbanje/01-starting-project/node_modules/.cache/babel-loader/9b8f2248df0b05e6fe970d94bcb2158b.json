{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Master\\\\Desktop\\\\IT\\\\React\\\\Vezbanje\\\\01-starting-project\\\\src\\\\Components\\\\Users\\\\AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from \"./AddUser.module.css\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const [enteredUsername, setEnteredUsername] = useState(\"\"); //ubacujemo state za ime i stavljamo da je pocetni state prazan\n\n  const [enteredAge, setEnteredAge] = useState(\"\"); //ubacujemo state za godine i stavljamo da je pocetni state prazan\n\n  const [error, setError] = useState(); //ubacujemo state za error koji je svakako prazan pa nema potrebe ista da stavljamo u argument\n\n  const addUserHandler = event => {\n    event.preventDefault(); //po defaultu cim kliknemo dugme i na taj nacin submituje <form>, salje se request serveru da reloaduje stranicu; to nama ne odgovara jer mi zelimo da sacuvamo podatke koje smo uneli ne da ih obrisemo, zato koristimo preventDefault() da spreci reload\n\n    if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\n      //unosimo validaciju ako je prazno\n      setError({\n        //u slucaju da validacija ne prodje, izbaci ovaj error koji pravi objekat sa 2 artibuda, title i message, koji se pozivaju kroz props takodje unutar ErrorModal.js\n        title: \"invalid input\",\n        message: \"Please enter a valid name and age (non-empty values).\"\n      });\n    }\n\n    if (+enteredAge < 1) {\n      //unosimo validaciju ako je negativan broj godina\n      setError({\n        //isto kao i u redu 17, samo za godine\n        title: \"invalid age\",\n        message: \"Please enter a valid age (> 0).\"\n      });\n    } //console.log(enteredUsername, enteredAge);\n\n\n    props.onAddUser(enteredAge, enteredUsername); //LIFTING THE STATE UP - uvezujemo sa <AddUser onAddUser={addUserHandler}/> iz App.js; ovde stavimo kao da je onAddUser funkcija tj pokrecemo se () jer to i jeste funkcija s obzirom da onAddUser pokazuje na nju u svojoj zagradi; 2 argumenta te funkcije su uneti podaci\n\n    setEnteredUsername(\"\"); //brise unete podatke za username kad kliknemo na dugme i dodamo ih \n\n    setEnteredAge(\"\"); //brise unete podatke za age kad kliknemo na dugme i dodamo ih\n  };\n\n  const usernameChangeHandler = event => {\n    //funkcija za ime koja fetch-uje unete podatke i prosledi ih u setState da zameni stari state u novi\n    setEnteredUsername(event.target.value);\n  };\n\n  const ageChangeHandler = event => {\n    //funkcija za godine koja fetch-uje unete podatke i prosledi ih u setState da zameni stari state u novi\n    setEnteredAge(event.target.value);\n  };\n\n  const errorHandler = () => {\n    //funkcija koja stavlja setError(null) sto u prevodu znaci da je setError=false, sto ponistava alert prozorcic\n    setError(null); //pokazivac na tu funkciju ubacujemo u red 50, gde je onConfirm povezan sa ErrorModal.js \n  }; //Card vuce iz Card.js izgled, dok se nadogradjuje sa className={classes.input} sto vuce iz AddUser.module.css \n  //s obzirom da Card nije default JSX kod kao npr form, label, input itd, React ne zna sta da radi sa className={classes.input}, pa da bi radilo, moramo u Card.js da dodamo\n\n\n  return (\n    /*#__PURE__*/\n    //{error && <ErrorModal title={error.title} message={error.message}/>} kaze da ako postoji error (koji se kroz gornji state za error kreira cim se poziva setError(), iz ErrorModal ce izvuci error.title i error.message\n    _jsxDEV(\"div\", {\n      children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n        title: error.title,\n        message: error.message,\n        onConfirm: errorHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.input,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: addUserHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            type: \"text\",\n            value: enteredUsername,\n            onChange: usernameChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"age\",\n            children: \"Age (Years)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"age\",\n            type: \"number\",\n            value: enteredAge,\n            onChange: ageChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Add User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }, this)\n  );\n};\n\n_s(AddUser, \"24Mlx5KmZlcVP5hqpYNk+uZ5LMQ=\");\n\n_c = AddUser;\nexport default AddUser; //u <label> deo smo ubacili for, ali posto u JSX for ne moze da se unese jer znaci nesto drugo, pise se htmlFor\n//kad smo napravili state, ubacili smo u <input> onChange={} koji pokrece funkciju u zagradi cim se tu desi neka promena tj unese ime ili godine \n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"names":["React","useState","Card","classes","Button","ErrorModal","AddUser","props","enteredUsername","setEnteredUsername","enteredAge","setEnteredAge","error","setError","addUserHandler","event","preventDefault","trim","length","title","message","onAddUser","usernameChangeHandler","target","value","ageChangeHandler","errorHandler","input"],"sources":["C:/Users/Master/Desktop/IT/React/Vezbanje/01-starting-project/src/Components/Users/AddUser.js"],"sourcesContent":["import React, {useState} from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport classes from \"./AddUser.module.css\"\r\nimport Button from \"../UI/Button\";\r\nimport ErrorModal from \"../UI/ErrorModal\";\r\n\r\n\r\nconst AddUser = (props) => {\r\n  const [enteredUsername,setEnteredUsername]= useState(\"\");     //ubacujemo state za ime i stavljamo da je pocetni state prazan\r\n  const [enteredAge,setEnteredAge]= useState(\"\");               //ubacujemo state za godine i stavljamo da je pocetni state prazan\r\n  const [error, setError] = useState();                         //ubacujemo state za error koji je svakako prazan pa nema potrebe ista da stavljamo u argument\r\n \r\n  const addUserHandler = (event) => {\r\n    event.preventDefault();                                     //po defaultu cim kliknemo dugme i na taj nacin submituje <form>, salje se request serveru da reloaduje stranicu; to nama ne odgovara jer mi zelimo da sacuvamo podatke koje smo uneli ne da ih obrisemo, zato koristimo preventDefault() da spreci reload\r\n    if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {          //unosimo validaciju ako je prazno\r\n      setError({                                                                          //u slucaju da validacija ne prodje, izbaci ovaj error koji pravi objekat sa 2 artibuda, title i message, koji se pozivaju kroz props takodje unutar ErrorModal.js\r\n        title: \"invalid input\",\r\n        message: \"Please enter a valid name and age (non-empty values).\"\r\n      });\r\n    }\r\n    if (+enteredAge < 1) {                                                                //unosimo validaciju ako je negativan broj godina\r\n      setError({                                                                          //isto kao i u redu 17, samo za godine\r\n        title: \"invalid age\",\r\n        message: \"Please enter a valid age (> 0).\"\r\n      });\r\n    }\r\n    //console.log(enteredUsername, enteredAge);\r\n    props.onAddUser(enteredAge, enteredUsername);               //LIFTING THE STATE UP - uvezujemo sa <AddUser onAddUser={addUserHandler}/> iz App.js; ovde stavimo kao da je onAddUser funkcija tj pokrecemo se () jer to i jeste funkcija s obzirom da onAddUser pokazuje na nju u svojoj zagradi; 2 argumenta te funkcije su uneti podaci\r\n    setEnteredUsername(\"\");                                     //brise unete podatke za username kad kliknemo na dugme i dodamo ih \r\n    setEnteredAge(\"\");                                          //brise unete podatke za age kad kliknemo na dugme i dodamo ih\r\n  };\r\n\r\n  const usernameChangeHandler = (event) => {                    //funkcija za ime koja fetch-uje unete podatke i prosledi ih u setState da zameni stari state u novi\r\n    setEnteredUsername(event.target.value);\r\n  }\r\n\r\n  const ageChangeHandler = (event) => {                         //funkcija za godine koja fetch-uje unete podatke i prosledi ih u setState da zameni stari state u novi\r\n    setEnteredAge(event.target.value);\r\n  }\r\n\r\n  const errorHandler = () => {                                  //funkcija koja stavlja setError(null) sto u prevodu znaci da je setError=false, sto ponistava alert prozorcic\r\n    setError(null);                                             //pokazivac na tu funkciju ubacujemo u red 50, gde je onConfirm povezan sa ErrorModal.js \r\n  }\r\n\r\n                                                                //Card vuce iz Card.js izgled, dok se nadogradjuje sa className={classes.input} sto vuce iz AddUser.module.css \r\n                                                                //s obzirom da Card nije default JSX kod kao npr form, label, input itd, React ne zna sta da radi sa className={classes.input}, pa da bi radilo, moramo u Card.js da dodamo\r\nreturn (                                                        //{error && <ErrorModal title={error.title} message={error.message}/>} kaze da ako postoji error (koji se kroz gornji state za error kreira cim se poziva setError(), iz ErrorModal ce izvuci error.title i error.message\r\n  <div>\r\n    {error && <ErrorModal title={error.title} message={error.message} onConfirm={errorHandler}/>}     \r\n    <Card className={classes.input}>\r\n      <form onSubmit={addUserHandler}>      \r\n        <label htmlFor=\"username\">Username</label>\r\n        <input\r\n          id=\"username\" \r\n          type=\"text\" \r\n          value={enteredUsername} \r\n          onChange={usernameChangeHandler}/>\r\n        <label htmlFor=\"age\">Age (Years)</label>\r\n        <input \r\n          id=\"age\" \r\n          type=\"number\" \r\n          value={enteredAge} \r\n          onChange={ageChangeHandler}/>\r\n        <Button type=\"submit\">Add User</Button>\r\n      </form>\r\n    </Card>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n//u <label> deo smo ubacili for, ali posto u JSX for ne moze da se unese jer znaci nesto drugo, pise se htmlFor\r\n//kad smo napravili state, ubacili smo u <input> onChange={} koji pokrece funkciju u zagradi cim se tu desi neka promena tj unese ime ili godine "],"mappings":"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"},"metadata":{},"sourceType":"module"}