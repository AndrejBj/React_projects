{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Master\\\\Desktop\\\\IT\\\\React\\\\Vezbanje\\\\01-starting-project\\\\src\\\\Components\\\\Users\\\\AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from \"./AddUser.module.css\";\nimport Button from \"../UI/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const [enteredUsername, setEnteredUsername] = useState(\"\"); //stavljamo da je pocetni state prazan\n\n  const [enteredAge, setEnteredAge] = useState(\"\");\n\n  const addUserHandler = event => {\n    event.preventDefault(); //po defaultu cim kliknemo dugme i na taj nacin submituje <form>, salje se request serveru da reloaduje stranicu; to nama ne odgovara jer mi zelimo da sacuvamo podatke koje smo uneli ne da ih obrisemo, zato koristimo preventDefault() da spreci reload\n\n    console.log(enteredUsername, enteredAge);\n  };\n\n  const usernameChangeHandler = event => {\n    //funkcija za ime koja fetch-uje unete podatke i prosledi ih u setState da zameni stari state u novi\n    setEnteredUsername(event.target.value);\n  };\n\n  const ageChangeHandler = event => {\n    //funkcija za godine koja fetch-uje unete podatke i prosledi ih u setState da zameni stari state u novi\n    setEnteredAge(event.target.value);\n  };\n\n  return (\n    /*#__PURE__*/\n    //Card vuce iz Card.js izgled, dok se nadogradjuje sa className={classes.input} sto vuce iz AddUser.module.css \n    //s obzirom da Card nije default JSX kod kao npr form, label, input itd, React ne zna sta da radi sa className={classes.input}, pa da bi radilo, moramo u Card.js da dodamo\n    _jsxDEV(Card, {\n      className: classes.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          value: enteredUsername,\n          onChange: usernameChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age (Years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"age\",\n          type: \"number\",\n          value: enteredAge,\n          onChange: ageChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(AddUser, \"p5sXDtyxKvEMF8dn7okCrL8zzS4=\");\n\n_c = AddUser;\nexport default AddUser; //u <label> deo smo ubacili for, ali posto u JSX for ne moze da se unese jer znaci nesto drugo, pise se htmlFor\n//kad smo napravili state, ubacili smo u <input> onChange={} koji pokrece funkciju u zagradi cim se tu desi neka promena tj unese ime ili godine \n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"names":["React","useState","Card","classes","Button","AddUser","props","enteredUsername","setEnteredUsername","enteredAge","setEnteredAge","addUserHandler","event","preventDefault","console","log","usernameChangeHandler","target","value","ageChangeHandler","input"],"sources":["C:/Users/Master/Desktop/IT/React/Vezbanje/01-starting-project/src/Components/Users/AddUser.js"],"sourcesContent":["import React, {useState} from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport classes from \"./AddUser.module.css\"\r\nimport Button from \"../UI/Button\";\r\n\r\n\r\nconst AddUser = (props) => {\r\n  const [enteredUsername,setEnteredUsername]= useState(\"\");     //stavljamo da je pocetni state prazan\r\n  const [enteredAge,setEnteredAge]= useState(\"\");\r\n\r\n  const addUserHandler = (event) => {\r\n    event.preventDefault();                                     //po defaultu cim kliknemo dugme i na taj nacin submituje <form>, salje se request serveru da reloaduje stranicu; to nama ne odgovara jer mi zelimo da sacuvamo podatke koje smo uneli ne da ih obrisemo, zato koristimo preventDefault() da spreci reload\r\n    console.log(enteredUsername, enteredAge);\r\n  };\r\n\r\n  const usernameChangeHandler = (event) => {                    //funkcija za ime koja fetch-uje unete podatke i prosledi ih u setState da zameni stari state u novi\r\n    setEnteredUsername(event.target.value);\r\n  }\r\n\r\n  const ageChangeHandler = (event) => {                         //funkcija za godine koja fetch-uje unete podatke i prosledi ih u setState da zameni stari state u novi\r\n    setEnteredAge(event.target.value);\r\n  }\r\n\r\n  return (                                                      //Card vuce iz Card.js izgled, dok se nadogradjuje sa className={classes.input} sto vuce iz AddUser.module.css \r\n                                                                //s obzirom da Card nije default JSX kod kao npr form, label, input itd, React ne zna sta da radi sa className={classes.input}, pa da bi radilo, moramo u Card.js da dodamo\r\n    <Card className={classes.input}>\r\n      <form onSubmit={addUserHandler}>      \r\n        <label htmlFor=\"username\">Username</label>\r\n        <input id=\"username\" type=\"text\" value={enteredUsername} onChange={usernameChangeHandler}/>\r\n        <label htmlFor=\"age\">Age (Years)</label>\r\n        <input id=\"age\" type=\"number\" value={enteredAge} onChange={ageChangeHandler}/>\r\n        <Button type=\"submit\">Add User</Button>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n//u <label> deo smo ubacili for, ali posto u JSX for ne moze da se unese jer znaci nesto drugo, pise se htmlFor\r\n//kad smo napravili state, ubacili smo u <input> onChange={} koji pokrece funkciju u zagradi cim se tu desi neka promena tj unese ime ili godine "],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAAA;;EACzB,MAAM,CAACC,eAAD,EAAiBC,kBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD,CADyB,CACqC;;EAC9D,MAAM,CAACQ,UAAD,EAAYC,aAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;;EAEA,MAAMU,cAAc,GAAIC,KAAD,IAAW;IAChCA,KAAK,CAACC,cAAN,GADgC,CAC4B;;IAC5DC,OAAO,CAACC,GAAR,CAAYR,eAAZ,EAA6BE,UAA7B;EACD,CAHD;;EAKA,MAAMO,qBAAqB,GAAIJ,KAAD,IAAW;IAAqB;IAC5DJ,kBAAkB,CAACI,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAlB;EACD,CAFD;;EAIA,MAAMC,gBAAgB,GAAIP,KAAD,IAAW;IAA0B;IAC5DF,aAAa,CAACE,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAb;EACD,CAFD;;EAIA;IAAA;IAA8D;IACA;IAC5D,QAAC,IAAD;MAAM,SAAS,EAAEf,OAAO,CAACiB,KAAzB;MAAA,uBACE;QAAM,QAAQ,EAAET,cAAhB;QAAA,wBACE;UAAO,OAAO,EAAC,UAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,EAAE,EAAC,UAAV;UAAqB,IAAI,EAAC,MAA1B;UAAiC,KAAK,EAAEJ,eAAxC;UAAyD,QAAQ,EAAES;QAAnE;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAO,OAAO,EAAC,KAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE;UAAO,EAAE,EAAC,KAAV;UAAgB,IAAI,EAAC,QAArB;UAA8B,KAAK,EAAEP,UAArC;UAAiD,QAAQ,EAAEU;QAA3D;UAAA;UAAA;UAAA;QAAA,QAJF,eAKE,QAAC,MAAD;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAFF;AAYD,CA7BD;;GAAMd,O;;KAAAA,O;AA+BN,eAAeA,OAAf,C,CACA;AACA"},"metadata":{},"sourceType":"module"}