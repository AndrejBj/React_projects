{"ast":null,"code":"//import React from 'react';       skinuli smo React jer ga sad vise ne koristimo, vec koristimo styled-components\nimport styled from 'styled-components'; //import './Button.css';           to smo skinuli posto cemo raditi preko styled-components\n//u nastavku cemo raditi kroz styled-components, preko ATTACKED TEMPLATE sintakse (javascript sintaksa)\n//kao sto u nastavku imamo button`` metod, tako nam styled-components daje opciju za sve HTML tagove (p, input, h1, h2...) gde na svaki od tih tagova onda deluje taj metod\n//unutar `` ubacimo css kod iz Button.css fajla, samo sto izbacimo button selektore, a za pseudoselektore kao sto su button:focus npr, umesto button stavimo & koji onda ima istu funkciju  \n\nconst Button = styled.button`\n    font: inherit;\n    padding: 0.5rem 1.5rem;\n    border: 1px solid #8b005d;\n    color: white;\n    background: #8b005d;\n    box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);\n    cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:hover,\n  &:active {\n    background: #ac0e77;\n    border-color: #ac0e77;\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.26);  \n  }\n\n`; //styled je objekat iz styled-components, button`` je poseban metod koji radi na taj styled objekat, gde mi u `` unosimo kod koji ce da deluje na taj button metod\n\n/* const Button = props => {\n  return (\n    <button type={props.type} className=\"button\" onClick={props.onClick}>\n      {props.children}\n    </button>\n  );\n}; */\n\nexport default Button;","map":{"version":3,"names":["styled","Button","button"],"sources":["C:/Users/Master/Desktop/IT/React/Styling project/01-starting-project/src/components/UI/Button/Button.js"],"sourcesContent":["//import React from 'react';       skinuli smo React jer ga sad vise ne koristimo, vec koristimo styled-components\n\nimport styled from 'styled-components';\n//import './Button.css';           to smo skinuli posto cemo raditi preko styled-components\n\n//u nastavku cemo raditi kroz styled-components, preko ATTACKED TEMPLATE sintakse (javascript sintaksa)\n//kao sto u nastavku imamo button`` metod, tako nam styled-components daje opciju za sve HTML tagove (p, input, h1, h2...) gde na svaki od tih tagova onda deluje taj metod\n//unutar `` ubacimo css kod iz Button.css fajla, samo sto izbacimo button selektore, a za pseudoselektore kao sto su button:focus npr, umesto button stavimo & koji onda ima istu funkciju  \nconst Button = styled.button`\n    font: inherit;\n    padding: 0.5rem 1.5rem;\n    border: 1px solid #8b005d;\n    color: white;\n    background: #8b005d;\n    box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);\n    cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:hover,\n  &:active {\n    background: #ac0e77;\n    border-color: #ac0e77;\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.26);  \n  }\n\n`;                                                      //styled je objekat iz styled-components, button`` je poseban metod koji radi na taj styled objekat, gde mi u `` unosimo kod koji ce da deluje na taj button metod\n\n/* const Button = props => {\n  return (\n    <button type={props.type} className=\"button\" onClick={props.onClick}>\n      {props.children}\n    </button>\n  );\n}; */\n\nexport default Button;\n"],"mappings":"AAAA;AAEA,OAAOA,MAAP,MAAmB,mBAAnB,C,CACA;AAEA;AACA;AACA;;AACA,MAAMC,MAAM,GAAGD,MAAM,CAACE,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA,C,CAoBwD;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeD,MAAf"},"metadata":{},"sourceType":"module"}