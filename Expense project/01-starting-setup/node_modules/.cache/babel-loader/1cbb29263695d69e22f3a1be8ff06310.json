{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Master\\\\Desktop\\\\IT\\\\React\\\\project_course1\\\\01-starting-setup\\\\src\\\\components\\\\Chart\\\\ChartBar.js\";\nimport React from \"react\";\nimport \"./ChartBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChartBar = props => {\n  let barFillHeight = \"0%\";\n\n  if (props.max > 0) {\n    barFillHeight = Math.round(props.value / props.maxValue * 100) + \"%\"; //daje procenat izmedju 0 i 100 o popunjenosti grafikona (round zaokruzuje)\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar__inner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-bar__fill\",\n        style: {\n          height: barFillHeight\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar__label\",\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ChartBar;\nexport default ChartBar; //u redu 14 dodajemo DINAMICKO STILIZOVANJE, tako sto dodajemo style=... to je html kod za stilizaciju, ali u React\n//funkcionise tako da stavimo duple viticaste zagrade, gde se spoljne odnose na dinamicki kod, a unutrasnje na javascript objekat \n//mozemo da uradimo hardkodovano, npr style={\"background-color\": \"red\"} ili dinamicki style={{height: barFillHeight}} kao u nasem primeru\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartBar\");","map":{"version":3,"names":["React","ChartBar","props","barFillHeight","max","Math","round","value","maxValue","height","label"],"sources":["C:/Users/Master/Desktop/IT/React/project_course1/01-starting-setup/src/components/Chart/ChartBar.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if(props.max > 0) {\r\n    barFillHeight = Math.round((props.value/props.maxValue)*100) + \"%\";            //daje procenat izmedju 0 i 100 o popunjenosti grafikona (round zaokruzuje)\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n\r\n//u redu 14 dodajemo DINAMICKO STILIZOVANJE, tako sto dodajemo style=... to je html kod za stilizaciju, ali u React\r\n//funkcionise tako da stavimo duple viticaste zagrade, gde se spoljne odnose na dinamicki kod, a unutrasnje na javascript objekat \r\n//mozemo da uradimo hardkodovano, npr style={\"background-color\": \"red\"} ili dinamicki style={{height: barFillHeight}} kao u nasem primeru"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAC1B,IAAIC,aAAa,GAAG,IAApB;;EACA,IAAGD,KAAK,CAACE,GAAN,GAAY,CAAf,EAAkB;IAChBD,aAAa,GAAGE,IAAI,CAACC,KAAL,CAAYJ,KAAK,CAACK,KAAN,GAAYL,KAAK,CAACM,QAAnB,GAA6B,GAAxC,IAA+C,GAA/D,CADgB,CAC+D;EAChF;;EAED,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACE;MAAK,SAAS,EAAC,kBAAf;MAAA,uBACE;QAAK,SAAS,EAAC,iBAAf;QAAiC,KAAK,EAAE;UAACC,MAAM,EAAEN;QAAT;MAAxC;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAK,SAAS,EAAC,kBAAf;MAAA,UAAmCD,KAAK,CAACQ;IAAzC;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAdD;;KAAMT,Q;AAgBN,eAAeA,QAAf,C,CAEA;AACA;AACA"},"metadata":{},"sourceType":"module"}