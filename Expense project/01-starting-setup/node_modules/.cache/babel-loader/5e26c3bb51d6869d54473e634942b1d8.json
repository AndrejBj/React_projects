{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Master\\\\Desktop\\\\IT\\\\React\\\\project_course\\\\01-starting-setup\\\\src\\\\components\\\\Card.js\";\n//card.js komponente uglavnom se odnose na neke elemente kontejner elemente sa oblim uglovima, malo senke itd\nimport './Card.css'; //odavde vucemo podatke samo za odredjenu stilizaciju koja bi se inace ponavljala, u ovom primeru za wrapper tj ceo tamno sivi deo iza komponenti sa svetlo sivim delom\n//\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  const classes = \"card\" + props.className; //bez ovog dela koga imacemo zbrku na proizvodu jer ce raditi samo glavni wrapper, a css delovi unutar tog wrappera ne; da bismo ovo izbegli ubacujemo ovo u kod gde se \"card\" odnosi na nas custom wrapper iz Card.css fajla i dodaje mu se props.className, da on koristi i className delove unutar njega, kao npr className=\"expense-item__description\" i className=\"expense-item__price\" u ExpenseItem.js\n  //return <div className=\"card\">{props.children}</div>;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this); //izmenimo kod samo da dinamicki vuce konstantu iz reda 6\n}\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["Card","props","classes","className","children"],"sources":["C:/Users/Master/Desktop/IT/React/project_course/01-starting-setup/src/components/Card.js"],"sourcesContent":["//card.js komponente uglavnom se odnose na neke elemente kontejner elemente sa oblim uglovima, malo senke itd\r\nimport './Card.css';    //odavde vucemo podatke samo za odredjenu stilizaciju koja bi se inace ponavljala, u ovom primeru za wrapper tj ceo tamno sivi deo iza komponenti sa svetlo sivim delom\r\n\r\n//\r\nfunction Card(props) {\r\n    const classes = \"card\" + props.className;                    //bez ovog dela koga imacemo zbrku na proizvodu jer ce raditi samo glavni wrapper, a css delovi unutar tog wrappera ne; da bismo ovo izbegli ubacujemo ovo u kod gde se \"card\" odnosi na nas custom wrapper iz Card.css fajla i dodaje mu se props.className, da on koristi i className delove unutar njega, kao npr className=\"expense-item__description\" i className=\"expense-item__price\" u ExpenseItem.js\r\n    //return <div className=\"card\">{props.children}</div>;\r\n    return <div className={classes}>{props.children}</div>;      //izmenimo kod samo da dinamicki vuce konstantu iz reda 6\r\n}\r\n\r\nexport default Card;"],"mappings":";AAAA;AACA,OAAO,YAAP,C,CAAwB;AAExB;;;;AACA,SAASA,IAAT,CAAcC,KAAd,EAAqB;EACjB,MAAMC,OAAO,GAAG,SAASD,KAAK,CAACE,SAA/B,CADiB,CAC4C;EAC7D;;EACA,oBAAO;IAAK,SAAS,EAAED,OAAhB;IAAA,UAA0BD,KAAK,CAACG;EAAhC;IAAA;IAAA;IAAA;EAAA,QAAP,CAHiB,CAG4C;AAChE;;KAJQJ,I;AAMT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}