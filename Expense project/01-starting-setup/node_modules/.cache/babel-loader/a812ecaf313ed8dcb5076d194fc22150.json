{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Master\\\\Desktop\\\\IT\\\\React\\\\project_course\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./expenses.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\"; //ovo izmenjuje spoljni wrapper\n\nimport ExpensesFilter from \"./ExpensesFilter\"; //ovde za razliku od App.js, mora da povuce podatke preko props iz App.js a zatim da ih prosledi u ExpenseItem.js, zbog cega u atribute dodajemo props (u App kad smo na pocetku prosledjivali nije bilo props kod atributa)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2020\"); //stavili smo da pocetna godina bude 2020 koja je prikazana na sajtu, ali da bi se to stvarno videlo, moramo pocetnu godinu odavde da uvezemo kroz props sa ExpensesFilter.js\n  //zato ovde u redu 20 gde saljemo podatke drugom fajlu imamo 2 propsa, selected koji salje podatak za pocetnu godinu i onChangeFilter koji menja godinu; ExpensesFilter.js hvata pocetnu godinu u redu 16 kroz value\n\n  const filterChangeHandler = selectedYear => {\n    //console.log(\"expenses.js\");\n    //console.log(selectedYear);\n    setFilteredYear(selectedYear);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), props.items.map(expense =>\n      /*#__PURE__*/\n      //dole smo hardkodovali koji ce element u expense nizu iznad biti prosledjen u ExpenseItem komponentu i prikazan na stranici; u ovom delu sad to menjamo da bude dinamicki, koristeci map() koji objekte iz expense niza iznad pretvara u JSX objekte i salje u ExpenseItem.js\n      _jsxDEV(ExpenseItem //props.items predstavljaju pokupljeni elementi tog expense niza\n      , {\n        title: expense.title //\n        ,\n        amount: expense.amount,\n        date: expense.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n\n_c = Expenses;\nexport default Expenses; //prosledjujemo funkciju Expenses\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","items","map","expense","title","amount","date"],"sources":["C:/Users/Master/Desktop/IT/React/project_course/01-starting-setup/src/components/Expenses/expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./expenses.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\"; //ovo izmenjuje spoljni wrapper\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\n\r\n//ovde za razliku od App.js, mora da povuce podatke preko props iz App.js a zatim da ih prosledi u ExpenseItem.js, zbog cega u atribute dodajemo props (u App kad smo na pocetku prosledjivali nije bilo props kod atributa)\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\"); //stavili smo da pocetna godina bude 2020 koja je prikazana na sajtu, ali da bi se to stvarno videlo, moramo pocetnu godinu odavde da uvezemo kroz props sa ExpensesFilter.js\r\n  //zato ovde u redu 20 gde saljemo podatke drugom fajlu imamo 2 propsa, selected koji salje podatak za pocetnu godinu i onChangeFilter koji menja godinu; ExpensesFilter.js hvata pocetnu godinu u redu 16 kroz value\r\n  const filterChangeHandler = (selectedYear) => {\r\n    //console.log(\"expenses.js\");\r\n    //console.log(selectedYear);\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        {props.items.map((expense) => (                //dole smo hardkodovali koji ce element u expense nizu iznad biti prosledjen u ExpenseItem komponentu i prikazan na stranici; u ovom delu sad to menjamo da bude dinamicki, koristeci map() koji objekte iz expense niza iznad pretvara u JSX objekte i salje u ExpenseItem.js\r\n          <ExpenseItem                                 //props.items predstavljaju pokupljeni elementi tog expense niza\r\n            title={expense.title}                      //\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n          />\r\n        ))}\r\n        {/* <ExpenseItem\r\n          title={props.items[0].title}                 //preimenovali smo pocetni props.expenses u props.items, pa smo menjali to i u App.js da bude preglednije jer se expenses ponavlja mnogo puta\r\n          amount={props.items[0].amount}\r\n          date={props.items[0].date}\r\n        ></ExpenseItem>\r\n        <ExpenseItem\r\n          title={props.items[1].title}\r\n          amount={props.items[1].amount}\r\n          date={props.items[1].date}\r\n        ></ExpenseItem>\r\n        <ExpenseItem\r\n          title={props.items[2].title}\r\n          amount={props.items[2].amount}\r\n          date={props.items[2].date}\r\n        ></ExpenseItem>\r\n        <ExpenseItem\r\n          title={props.items[3].title}\r\n          amount={props.items[3].amount}\r\n          date={props.items[3].date}\r\n        ></ExpenseItem> */}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses; //prosledjujemo funkciju Expenses\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,gBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB,C,CAA+B;;AAC/B,OAAOC,cAAP,MAA2B,kBAA3B,C,CAEA;;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACvB,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD,CADuB,CACmC;EAC1D;;EACA,MAAMQ,mBAAmB,GAAIC,YAAD,IAAkB;IAC5C;IACA;IACAF,eAAe,CAACE,YAAD,CAAf;EACD,CAJD;;EAKA,oBACE;IAAA,uBACE,QAAC,IAAD;MAAM,SAAS,EAAC,UAAhB;MAAA,wBACE,QAAC,cAAD;QACE,QAAQ,EAAEH,YADZ;QAEE,cAAc,EAAEE;MAFlB;QAAA;QAAA;QAAA;MAAA,QADF,EAKGH,KAAK,CAACK,KAAN,CAAYC,GAAZ,CAAiBC,OAAD;MAAA;MAA8B;MAC7C,QAAC,WAAD,CAA6C;MAA7C;QACE,KAAK,EAAEA,OAAO,CAACC,KADjB,CAC6C;QAD7C;QAEE,MAAM,EAAED,OAAO,CAACE,MAFlB;QAGE,IAAI,EAAEF,OAAO,CAACG;MAHhB;QAAA;QAAA;QAAA;MAAA,QADD,CALH;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAqCD;;GA7CQX,Q;;KAAAA,Q;AA+CT,eAAeA,QAAf,C,CAAyB"},"metadata":{},"sourceType":"module"}