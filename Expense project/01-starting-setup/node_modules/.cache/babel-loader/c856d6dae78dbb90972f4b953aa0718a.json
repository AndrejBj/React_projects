{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Master\\\\Desktop\\\\IT\\\\React\\\\project_course\\\\01-starting-setup\\\\src\\\\components\\\\newExpense\\\\expenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./expenseForm.css\";\n/* const ExpenseForm = () => {\r\n    const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n    const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n    const [enteredDatee, setEnteredDate] = useState(\"\");\r\n\r\n    const titleChangeHandler = (event) => {                        //ovaj event u zagradi je default objekat koji ce React uvek izbaciti i koji mozemo videti kao ispis kad udjemo u konzolu na browseru\r\n        setEnteredTitle(event.target.value);                       //kad napisemo bilo sta u title delu i pogledamo sta nam ispise u konzoli browsera, mozemo da vidimo kad kliknemo na target:input da tu ima brda opcija, odakle smo mi uzeli value; kad onda stavimo events.target.value, u konzoli ce nam ispisati tacno sto napisemo i u nasoj aplikaciji (nece vise ispisivati kao do sada 1x clicked!, 2x clicked! itd), a to je zbog toga sto nam sacuva value kad se desi svaki event (u ovom slucaju klik) \r\n    }                                                              //(event.target.value) nam \r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);                      //takodje (event.target.value) ce uvek dati string, nevezano da li je neki karakter ili broj, uvek je string (zbog toga smo stavili setState(\"\") ovako, da prihvati string)\r\n    }\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n    }\r\n\r\n    return (\r\n    <form>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input type=\"number\" min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler}/>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler}/>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm; */\n//input tagove u React pisemo kao samozatvarajuce, posto medju otvarajucim i zatvarajucim tagom nema content-a; kod input broja, min=\"0.01\" step=\"0.01\" -> default html atributi za input elemente koji kontrolisu kako se ti elementi mogu koristiti\n//isto vazi i kod input datuma, gde smo stavili da mogu da se koriste samo godine 2019, 2020, 2021 i 2022\n//da ne pisemo 3 odvojena state-a, mozemo da uradimo i ovako u jednom state-u:\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = () => {\n  _s();\n\n  /*     const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n      const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n      const [enteredDatee, setEnteredDate] = useState(\"\"); */\n  const [userInput, setUserInput] = useState({\n    //napravimo jedan state koji ima objekat u kom se nalaze sva 3 dela koja hocemo da menjamo\n    setEnteredTitle: \"\",\n    setEnteredAmount: \"\",\n    setEnteredDate: \"\"\n  });\n\n  const titleChangeHandler = event => {\n    //setEnteredTitle(event.target.value);\n    setUserInput({});\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpenseForm, \"xJ7/UzHqCD6s4QN5FTt+P5gaUew=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","ExpenseForm","userInput","setUserInput","setEnteredTitle","setEnteredAmount","setEnteredDate","titleChangeHandler","event","amountChangeHandler","target","value","dateChangeHandler"],"sources":["C:/Users/Master/Desktop/IT/React/project_course/01-starting-setup/src/components/newExpense/expenseForm.js"],"sourcesContent":["import React, {useState} from \"react\";\r\n\r\nimport \"./expenseForm.css\";\r\n\r\n/* const ExpenseForm = () => {\r\n    const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n    const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n    const [enteredDatee, setEnteredDate] = useState(\"\");\r\n\r\n    const titleChangeHandler = (event) => {                        //ovaj event u zagradi je default objekat koji ce React uvek izbaciti i koji mozemo videti kao ispis kad udjemo u konzolu na browseru\r\n        setEnteredTitle(event.target.value);                       //kad napisemo bilo sta u title delu i pogledamo sta nam ispise u konzoli browsera, mozemo da vidimo kad kliknemo na target:input da tu ima brda opcija, odakle smo mi uzeli value; kad onda stavimo events.target.value, u konzoli ce nam ispisati tacno sto napisemo i u nasoj aplikaciji (nece vise ispisivati kao do sada 1x clicked!, 2x clicked! itd), a to je zbog toga sto nam sacuva value kad se desi svaki event (u ovom slucaju klik) \r\n    }                                                              //(event.target.value) nam \r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);                      //takodje (event.target.value) ce uvek dati string, nevezano da li je neki karakter ili broj, uvek je string (zbog toga smo stavili setState(\"\") ovako, da prihvati string)\r\n    }\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n    }\r\n\r\n    return (\r\n    <form>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input type=\"number\" min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler}/>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler}/>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm; */\r\n//input tagove u React pisemo kao samozatvarajuce, posto medju otvarajucim i zatvarajucim tagom nema content-a; kod input broja, min=\"0.01\" step=\"0.01\" -> default html atributi za input elemente koji kontrolisu kako se ti elementi mogu koristiti\r\n//isto vazi i kod input datuma, gde smo stavili da mogu da se koriste samo godine 2019, 2020, 2021 i 2022\r\n\r\n\r\n\r\n//da ne pisemo 3 odvojena state-a, mozemo da uradimo i ovako u jednom state-u:\r\nconst ExpenseForm = () => {\r\n/*     const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n    const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n    const [enteredDatee, setEnteredDate] = useState(\"\"); */\r\n    const [userInput, setUserInput] = useState({                         //napravimo jedan state koji ima objekat u kom se nalaze sva 3 dela koja hocemo da menjamo\r\n        setEnteredTitle: \"\",\r\n        setEnteredAmount: \"\",\r\n        setEnteredDate: \"\",\r\n    })\r\n\r\n    const titleChangeHandler = (event) => {                        \r\n        //setEnteredTitle(event.target.value);\r\n        setUserInput({\r\n\r\n        })                      \r\n    }                                                              \r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);                      \r\n    }\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n    }\r\n\r\n    return (\r\n    <form>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input type=\"number\" min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler}/>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler}/>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAO,mBAAP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;AACA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EAC1B;AACA;AACA;EACI,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC;IAA0B;IACjEI,eAAe,EAAE,EADsB;IAEvCC,gBAAgB,EAAE,EAFqB;IAGvCC,cAAc,EAAE;EAHuB,CAAD,CAA1C;;EAMA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;IAClC;IACAL,YAAY,CAAC,EAAD,CAAZ;EAGH,CALD;;EAMA,MAAMM,mBAAmB,GAAID,KAAD,IAAW;IACnCH,gBAAgB,CAACG,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAhB;EACH,CAFD;;EAGA,MAAMC,iBAAiB,GAAIJ,KAAD,IAAW;IACjCF,cAAc,CAACE,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAd;EACH,CAFD;;EAIA,oBACA;IAAA,uBACE;MAAK,SAAS,EAAC,uBAAf;MAAA,wBACE;QAAK,SAAS,EAAC,sBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,MAAZ;UAAmB,QAAQ,EAAEJ;QAA7B;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QAAK,SAAS,EAAC,sBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,QAAZ;UAAqB,GAAG,EAAC,MAAzB;UAAgC,IAAI,EAAC,MAArC;UAA4C,QAAQ,EAAEE;QAAtD;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eASE;QAAK,SAAS,EAAC,sBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,MAAZ;UAAmB,GAAG,EAAC,YAAvB;UAAoC,GAAG,EAAC,YAAxC;UAAqD,QAAQ,EAAEG;QAA/D;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QATF,eAaE;QAAK,SAAS,EAAC,sBAAf;QAAA,uBACE;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAbF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADA;AAqBH,CA5CD;;GAAMX,W;;KAAAA,W;AA8CN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}