{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Master\\\\Desktop\\\\IT\\\\React\\\\project_course\\\\01-starting-setup\\\\src\\\\components\\\\ExpenseItem.js\";\nimport './ExpenseItem.css'; //<div>Date</div><div><h2>Title</h2></div><div>Amount</div>   ovako je nepregledno i ima 3 div elementa koji su root elementi, a pravilo React-a je da po return-u moze biti samo 1 div\n//umesto toga mozemo kao u nastavku da dodamo 1 glavni spoljni div, u okviru kojeg ce biti svi ostali div-ovi - to je dozvoljeno; sa shift+alt+F se automatski formatira u pregledniji oblik\n//kad pravimo klase, u html se napise samo class, dok se ovde pise className, s obzirom da ovi div u nastavku koji izgledaju kao HTML kod, nisu pravi HTML vec JSX sastavljen od React tima, sto znaci da je to u pozadini i dalje javascript kod zbog cega prolazi\n//u te klase smo stavili deskripcije po osnovu kojih ce iz css fajla vuci stilizaciju\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseItem() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"March 28th 2021\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Car insurance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__price\",\n      children: \"$294.67\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ExpenseItem;\nexport default ExpenseItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"names":["ExpenseItem"],"sources":["C:/Users/Master/Desktop/IT/React/project_course/01-starting-setup/src/components/ExpenseItem.js"],"sourcesContent":["import './ExpenseItem.css';\r\n\r\n//<div>Date</div><div><h2>Title</h2></div><div>Amount</div>   ovako je nepregledno i ima 3 div elementa koji su root elementi, a pravilo React-a je da po return-u moze biti samo 1 div\r\n    //umesto toga mozemo kao u nastavku da dodamo 1 glavni spoljni div, u okviru kojeg ce biti svi ostali div-ovi - to je dozvoljeno; sa shift+alt+F se automatski formatira u pregledniji oblik\r\n    //kad pravimo klase, u html se napise samo class, dok se ovde pise className, s obzirom da ovi div u nastavku koji izgledaju kao HTML kod, nisu pravi HTML vec JSX sastavljen od React tima, sto znaci da je to u pozadini i dalje javascript kod zbog cega prolazi\r\n    //u te klase smo stavili deskripcije po osnovu kojih ce iz css fajla vuci stilizaciju\r\nfunction ExpenseItem() {\r\n  return (\r\n    <div className=\"expense-item\">\r\n      <div>March 28th 2021</div>\r\n      <div className=\"expense-item__description\">\r\n        <h2>Car insurance</h2>\r\n      </div>\r\n      <div className=\"expense-item__price\">$294.67</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n"],"mappings":";AAAA,OAAO,mBAAP,C,CAEA;AACI;AACA;AACA;;;;AACJ,SAASA,WAAT,GAAuB;EACrB,oBACE;IAAK,SAAS,EAAC,cAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,2BAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF,eAKE;MAAK,SAAS,EAAC,qBAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;KAVQA,W;AAYT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}